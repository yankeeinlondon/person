import { Find, FromDefn, Narrowable, ShapeCallback, Tuple } from "src/types/index";
/**
 * **Finder**
 *
 * A configured utility designed to find elements in a list.
 */
export type Finder<TList extends Tuple, TDeref extends string | number | null> = <TExtends extends Narrowable | ShapeCallback>(value: TExtends) => Find<TList, "equals", FromDefn<TExtends>, TDeref>;
/**
 * **find**(list, [deref]) => (value) => el | undefined
 *
 * A higher order function that allows _finding_ an element in a list
 * while preserving any available type information.
 */
export declare const find: <TList extends Tuple, TDeref extends string | number | null = null>(list: TList, deref?: TDeref) => Finder<TList, TDeref>;
//# sourceMappingURL=find.d.ts.map