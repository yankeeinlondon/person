import { GithubOrgUrl, GithubRepoIssuesListUrl, GithubRepoIssueUrl, GithubRepoProjectsUrl, GithubRepoProjectUrl, GithubRepoReleasesUrl, GithubRepoReleaseTagUrl, GithubRepoUrl, GithubUrl } from "src/types/string-literals";
/**
 * **isGithubUrl**`(val)`
 *
 * Type guard which validates that the passed in value is a valid
 * **Github** URL.
 */
export declare const isGithubUrl: <T>(val: T) => val is GithubUrl & T;
/**
 * **isGithubOrgUrl**`(val)`
 *
 * Type guard which validates that the passed in value is a valid
 * **Github** _organization_ URL.
 */
export declare const isGithubOrgUrl: <T>(val: T) => val is GithubOrgUrl & T;
/**
 * **isGithubRepoUrl**`(val)`
 *
 * Type guard which validates that the passed in value is a valid
 * **Github** _repo_ URL.
 */
export declare const isGithubRepoUrl: <T>(val: T) => val is GithubRepoUrl & T;
/**
 * **isGithubRepoReleasesUrl**`(val)`
 *
 * Type guard which validates that the passed in value is a valid
 * URL for the _releases_ of a given _repo_.
 *
 * **Related:** `isGithubRepoReleaseTagUrl`
 */
export declare const isGithubRepoReleasesUrl: <T>(val: T) => val is GithubRepoReleasesUrl & T;
/**
 * **isGithubRepoReleaseTagUrl**`(val)`
 *
 * Type guard which validates that the passed in value is a valid
 * URL for the _releases_ of a given _repo_.
 *
 * **Related:** `isGithubRepoReleasesUrl`
 */
export declare const isGithubRepoReleaseTagUrl: <T>(val: T) => val is GithubRepoReleaseTagUrl & T;
/**
 * **isGithubIssuesListUrl**`(val)`
 *
 * Type guard which validates that the passed in value is a valid
 * URL for the _issues_ of a given _repo_.
 *
 * **Related:** `isGithubIssueUrl`
 */
export declare const isGithubIssuesListUrl: <T>(val: T) => val is GithubRepoIssuesListUrl & T;
/**
 * **isGithubIssueUrl**`(val)`
 *
 * Type guard which validates that the passed in value is a valid
 * URL for the _issues_ of a given _repo_.
 *
 * **Related:** `isGithubIssuesListUrl`
 */
export declare const isGithubIssueUrl: <T>(val: T) => val is GithubRepoIssueUrl & T;
/**
 * **isGithubProjectsListUrl**`(val)`
 *
 * Type guard which validates that the passed in value is a valid
 * URL for the _projects_ of a given _repo_.
 *
 * **Related:** `isGithubProjectUrl`
 */
export declare const isGithubProjectsListUrl: <T>(val: T) => val is GithubRepoProjectsUrl & T;
/**
 * **isGithubProjectUrl**`(val)`
 *
 * Type guard which validates that the passed in value is a valid
 * URL for a _specific project_ of a given _repo_.
 *
 * **Related:** `isGithubProjectsListUrl`
 */
export declare const isGithubProjectUrl: <T>(val: T) => val is GithubRepoProjectUrl & T;
/**
 * **isGithubReleasesListUrl**`(val)`
 *
 * Type guard which validates that the passed in value is a valid
 * URL for the _Releases_ of a given _repo_.
 *
 * **Related:** `isGithubReleaseTagUrl`
 */
export declare const isGithubReleasesListUrl: <T>(val: T) => val is GithubRepoReleasesUrl & T;
/**
 * **isGithubReleaseTagUrl**`(val)`
 *
 * Type guard which validates that the passed in value is a valid
 * URL for a _specific release_ of a given _repo_.
 *
 * **Related:** `isGithubReleasesListUrl`
 */
export declare const isGithubReleaseTagUrl: <T>(val: T) => val is GithubRepoProjectUrl & T;
//# sourceMappingURL=github.d.ts.map