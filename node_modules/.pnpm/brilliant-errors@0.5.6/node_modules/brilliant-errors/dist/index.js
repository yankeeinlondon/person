var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __reExport = (target, module2, copyDefault, desc) => {
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && (copyDefault || key !== "default"))
        __defProp(target, key, { get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable });
  }
  return target;
};
var __toESM = (module2, isNodeMode) => {
  return __reExport(__markAsModule(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, "default", !isNodeMode && module2 && module2.__esModule ? { get: () => module2.default, enumerable: true } : { value: module2, enumerable: true })), module2);
};
var __toCommonJS = /* @__PURE__ */ ((cache) => {
  return (module2, temp) => {
    return cache && cache.get(module2) || (temp = __reExport(__markAsModule({}), module2, 1), cache && cache.set(module2, temp), temp);
  };
})(typeof WeakMap !== "undefined" ? /* @__PURE__ */ new WeakMap() : 0);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  BaseBrilliance: () => BaseBrilliance,
  createError: () => createError,
  isBrilliantError: () => isBrilliantError,
  prettyStack: () => prettyStack
});

// src/@guards/index.ts
function isBrilliantError(error) {
  return error instanceof Error && error.kind === "BrilliantError";
}

// src/@types/BaseBrilliance.ts
var BaseBrilliance = class extends Error {
  constructor() {
    super(...arguments);
    this.kind = "BrilliantError";
  }
};

// src/configurators/createError.ts
var import_callsites = __toESM(require("callsites"));

// src/shared/prettyStack.ts
function prettyStack(s) {
  return s.map((i) => {
    const file = (i.getFileName() || "[file unknown]").split("/").slice(-2).join("/");
    const func = i.getFunctionName() || i.getMethodName() || "unknown";
    const line = i.getLineNumber();
    return `	- ${file}, ${func}()${line ? `, at line ${line}` : ""}`;
  }).join("\n");
}

// src/configurators/constructors/standard.ts
var standard_default = (ctx, props) => (message, classification, options) => {
  ctx.message = `[ ${classification} ]: ${message} 

${prettyStack(ctx.structuredStack)}`;
  ctx.classification = classification;
  const parts = classification.split("/");
  ctx.code = parts[0];
  ctx.subType = parts[1];
  if ((options == null ? void 0 : options.httpStatusCode) || props.configOptions.defaultHttpStatus) {
    ctx.httpStatus = (options == null ? void 0 : options.httpStatusCode) || props.configOptions.defaultHttpStatus;
  }
};

// src/configurators/constructors/wrapper.ts
var wrapper_default = (ctx, _props) => (underlying, classification, options) => {
  ctx.classification = classification;
  if (options == null ? void 0 : options.httpErrorCode) {
    ctx.httpStatus = options.httpErrorCode;
  }
  ctx.message = (options == null ? void 0 : options.message) ? `${options == null ? void 0 : options.message} [ ${classification} ]: ${underlying.message}

${prettyStack(ctx.structuredStack)}` : `${underlying.message} [ ${classification} ]: wrapped error ${underlying.name}

${prettyStack(ctx.structuredStack)}`;
};

// src/configurators/constructors/network.ts
var network_default = (ctx, props) => (code, message, options) => {
  ctx.httpStatus = code;
  const classification = (options == null ? void 0 : options.classification) || `${props.configOptions.defaultType || props.app}/${props.configOptions.defaultSubType} || "unspecified"`;
  ctx.classification = classification;
  ctx.message = `${message} [ ${code}, ${classification} ]

${prettyStack(ctx.structuredStack)}`;
};

// src/configurators/constructors/index.ts
var constructors_default = (ctx, props) => ({
  standard: standard_default(ctx, props),
  wrapper: wrapper_default(ctx, props),
  network: network_default(ctx, props)
});

// src/configurators/createError.ts
var createError = (name, app) => (...types) => (...subTypes) => (...httpCodes) => (configOptions) => {
  const ErrorClass = class BrilliantError extends Error {
    constructor(...params) {
      super("");
      this.kind = "BrilliantError";
      this.constructorType = (configOptions == null ? void 0 : configOptions.constructorType) || "standard";
      this.name = name;
      this.app = app;
      this.structuredStack = (0, import_callsites.default)().slice(1) || [];
      this.filename = (this.structuredStack[0].getFileName() || "").split("/").slice(-2).join("/");
      this.line = this.structuredStack[0].getLineNumber();
      this.fn = this.structuredStack[0].getMethodName() || this.structuredStack[0].getFunctionName();
      const c = constructors_default(this, {
        name,
        app,
        types,
        subTypes,
        httpCodes,
        configOptions: configOptions || {}
      });
      const ctor = c[this.constructorType];
      ctor(...params);
    }
    toJSON() {
      return {
        app: this.app,
        name: this.name,
        message: this.message,
        classification: this.classification,
        httpStatus: this.httpStatus,
        code: this.code,
        subType: this.subType,
        fn: this.fn,
        line: this.line
      };
    }
  };
  const SpecificGuard = (unknown) => {
    return isBrilliantError(unknown) && unknown.name === name && unknown.app === app;
  };
  return [ErrorClass, SpecificGuard, isBrilliantError];
};
module.exports = __toCommonJS(src_exports);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  BaseBrilliance,
  createError,
  isBrilliantError,
  prettyStack
});
