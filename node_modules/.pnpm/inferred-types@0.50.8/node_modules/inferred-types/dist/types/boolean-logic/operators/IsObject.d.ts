import { AnyFunction, Mutable, Or, If, Extends } from "src/types/index";
/**
 * **IsObject**
 *
 * Boolean type utility used to check whether a type `T` is an object
 * (aka, it extends `Record<string, any>` or a readonly equivalent)
 */
export type IsObject<T> = Or<[
    If<Extends<T, Record<string | symbol, unknown>>, true, false>,
    If<Extends<Mutable<T>, Record<string | symbol, unknown>>, true, false>,
    If<Extends<T, object>, true, false>
]> extends true ? T extends AnyFunction ? false : Mutable<T> extends unknown[] ? false : true : false;
//# sourceMappingURL=IsObject.d.ts.map