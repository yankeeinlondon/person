/* eslint-disable no-use-before-define */
/**
 * **omit**(obj, excluding)
 *
 * Runtime utility which _excludes_ certain **keys** from an object.
 *
 * - this utility is meant to mimic the type utility `Omit<T,U>` provided
 * by Typescript in runtime
 * - attempts will be made to extract the narrowest possible type from
 * the passed in object.
 *
 * ```ts
 * // { baz: 3 }
 * const obj = omit({ foo: 1, bar: 2: baz: 3 }, "foo", "bar");
 * ```
 *
 * **Related:** `createOmission`, `withoutKeys`
 */
export function omit(obj, ...removeKeys) {
    const keys = Object.keys(obj);
    return keys.reduce((acc, key) => removeKeys.includes(key)
        ? acc
        : {
            ...acc,
            [key]: obj[key]
        }, {});
}
