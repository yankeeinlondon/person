/**
 * utility function to take a fully-qualified _user_ config
 * and make it into a FinalizedMapConfig
 */
const toFinalizedConfig = (config) => {
    return { ...config, finalized: true };
};
export const DEFAULT_ONE_TO_MANY_MAPPING = toFinalizedConfig({
    input: "req",
    output: "opt",
    cardinality: "I -> O[]",
});
export const DEFAULT_ONE_TO_ONE_MAPPING = toFinalizedConfig({
    input: "req",
    output: "req",
    cardinality: "I -> O",
});
export const DEFAULT_MANY_TO_ONE_MAPPING = toFinalizedConfig({
    input: "req",
    output: "req",
    cardinality: "I[] -> O",
});
/**
 * Expresses relationship between inputs/outputs:
 */
export var MapCardinality;
(function (MapCardinality) {
    /** every input results in 0:M outputs */
    MapCardinality["OneToMany"] = "I -> O[]";
    /** every input results in 0:1 outputs */
    MapCardinality["OneToOne"] = "I -> O";
    /** every input is an array of type I and reduced to a single O  */
    MapCardinality["ManyToOne"] = "I[] -> O";
})(MapCardinality || (MapCardinality = {}));
