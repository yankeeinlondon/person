import { createFnWithProps, } from "src/runtime/index";
const _userOptions = (def_values) => createFnWithProps((opt) => {
    return {
        ...def_values,
        opt
    };
}, { param: null });
/**
 * **defineOptions**`<T>(def_values?: () => { .. }) â†’ UserOptions<T, TReq>`
 *
 * Defines:
 *   1. a set of options,
 *   2. allows default values to be assigned,
 *   3. then provides
 * a type for user input which makes all properties that were optional or have
 * a default value be optional while also providing a type-strong merge function
 * to merge in their results.
 * ```ts
 * // {
 * //    userOptions: {width?: number; height: number}},
 * //    merge<U>(user: U) => T
 * // }
 * const opts = defineOptions<{width: number; height: number}() => ({width: 640});
 * ```
 */
// export const defineOptions = <
//   T extends Dictionary
// >(a: ({defaults: (<D extends Partial<T>>() => D)): void) => {
//   return userOptions(cb());
// };
