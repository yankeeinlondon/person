import { If, IsTrue, Narrowable, ObjectKey } from "src/types/index";
/**
 * **createFnWithProps**`(fn, props)`
 *
 * creates a strongly typed function along with properties.
 */
export declare const createFnWithProps: <TArgs extends readonly unknown[], TReturn extends Narrowable, N extends Narrowable, TProps extends Record<ObjectKey, N>, TNarrowing extends boolean = false>(fn: (...args: TArgs) => TReturn, props: TProps, narrowing?: TNarrowing) => If<IsTrue<TNarrowing>, (<A extends TArgs>(...args: A) => TReturn) & TProps, ((...args: TArgs) => TReturn) & TProps>;
//# sourceMappingURL=createFnWithProps.d.ts.map