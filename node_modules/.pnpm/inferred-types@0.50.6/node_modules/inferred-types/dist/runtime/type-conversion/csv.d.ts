import { CsvToJsonTuple, CsvToTuple, CsvToTupleStr } from "src/types/index";
export type CsvFormat = "string-tuple" | "string-numeric-tuple" | "json-tuple";
/**
 * **csv**`(csv, [format])`
 *
 * Converts a CSV string literal into a tuple of values
 * (based on format).
 *
 * **Note:** either _no space_ or _a single space_ between values
 * will provide a trimmed value but any additional whitespace
 * after the comma will result in some leading whitespace in
 * some values.
 *
 * @default format `string-numeric-tuple`
 */
export declare const csv: <T extends string, F extends CsvFormat = "string-numeric-tuple">(csv: T, format?: F) => F extends "string-numeric-tuple" ? CsvToTuple<T> : F extends "json-tuple" ? CsvToJsonTuple<T> : F extends "string-tuple" ? CsvToTupleStr<T> : never;
//# sourceMappingURL=csv.d.ts.map