import { IsUrl, GetUrlProtocol, GetUrlSource, GetUrlPath, GetUrlQueryParams, GetUrlPort, IsIpAddress, IsIp4Address, IsIp6Address } from "src/types/index";
export type UrlMeta<T> = {
    /** the URL passed in */
    url: T;
    /** boolean flag indicating whether the value passed in is considered a valid URL */
    isUrl: IsUrl<T>;
    /** the `NetworkProtocol` used in the URL */
    protocol: GetUrlProtocol<T>;
    path: T extends string ? GetUrlPath<T> : never;
    queryParams: T extends string ? GetUrlQueryParams<T> : never;
    /** the port number -- when stated explicitly -- or "default" */
    port: GetUrlPort<T>;
    /** either the domain name or the IP address */
    source: T extends string ? GetUrlSource<T> : never;
    /**
     * Boolean flag which indicates that the _source_ is an IP address (vs. Domain Name)
     */
    isIpAddress: IsIpAddress<T>;
    /**
     * Boolean flag indicating the _source_ is a IPv4 IP address
     */
    isIpV4Address: IsIp4Address<T>;
    /**
     * Boolean flag indicating the _source_ is a IPv6 IP address
     */
    isIpV6Address: IsIp6Address<T>;
};
export declare const getUrlProtocol: <T extends string>(url: T) => GetUrlProtocol<T>;
export declare const removeUrlProtocol: <T extends string>(url: T) => import("src/types/index").StripBefore<T, "://">;
export declare const getUrlPath: <T extends string>(url: T) => GetUrlPath<T>;
/**
 * **getUrlQueryParams**`(url, [specific])`
 *
 * Get's the query parameter's part of a URL and optionally allows
 * you to focus in on a specific key in the query parameters.
 *
 * If you do specify a particular query parameter it will decode
 * the value with URIDecode.
 */
export declare const getUrlQueryParams: <T extends string, S extends string | undefined>(url: T, specific?: S) => string | GetUrlQueryParams<T, S> | undefined;
export declare const getUrlPort: <T extends string>(url: T) => number | "default";
export declare const getUrlSource: <T extends string>(url: T) => GetUrlSource<T>;
/**
 * **urlMeta**`(url)`
 *
 * Analyzes the string passed in and provides a small dictionary of
 * metadata properties about the URL.
 */
export declare const urlMeta: <T extends string>(url: T) => {
    url: T;
    isUrl: IsUrl<T>;
    protocol: GetUrlProtocol<T>;
    path: GetUrlPath<T>;
    queryParameters: string | GetUrlQueryParams<T, string | undefined> | undefined;
    port: GetUrlPort<T>;
    source: GetUrlSource<T>;
    isIpAddress: IsIpAddress<GetUrlSource<T>>;
    isIp4Address: IsIp4Address<GetUrlSource<T>>;
    isIp6Address: IsIp6Address<GetUrlSource<T>>;
};
//# sourceMappingURL=urlMeta.d.ts.map