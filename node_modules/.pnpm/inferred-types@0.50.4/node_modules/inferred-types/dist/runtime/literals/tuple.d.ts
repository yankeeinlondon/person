import { IsUnionArray, Length, Narrowable, UnionArrayToTuple, UnionToTuple } from "src/types/index";
/**
 * **tuple**(value)
 *
 * Creates a discrete tuple.
 * ```ts
 * // [1,2,3]
 * const t1 = tuple(1,2,3);
 * const t2 = tuple([1,2,3]);
 * ```
 */
export declare const tuple: <N extends Narrowable, K extends PropertyKey, T extends readonly (Record<K, N> | N)[]>(...values: T) => import("src/types/index").AsArray<Length<T> extends 1 ? T[0] extends readonly unknown[] ? T[0] extends infer Arr ? IsUnionArray<Arr> extends true ? UnionArrayToTuple<Arr> : UnionToTuple<Arr> : T[0] : T[0] : T>;
//# sourceMappingURL=tuple.d.ts.map