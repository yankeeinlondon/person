/**
 * **toSnakeCase**(str)
 *
 * Converts a string into `snake_case` while preserving literal strings.
 *
 * **Note:** _by default it also removes surrounding white space (if it exists) but it
 * can be preserved if you change the `preserveWhitespace` flag._
 *
 * **Related:** `toKebabCase`, `toCamelCase`, `toPascalCase`
 */
export function toSnakeCase(input, preserveWhitespace = false) {
    const [_, preWhite, focus, postWhite] = /^(\s*)(.*?)(\s*)$/.exec(input);
    const convertInteriorSpace = (input) => input.replace(/\s+/gs, "_");
    const convertDashes = (input) => input.replace(/-/gs, "_");
    const injectUnderscoreBeforeCaps = (input) => input.replace(/([A-Z])/gs, "_$1");
    const removeLeadingUnderscore = (input) => input.startsWith("_") ? input.slice(1) : input;
    return ((preserveWhitespace ? preWhite : "") +
        removeLeadingUnderscore(injectUnderscoreBeforeCaps(convertDashes(convertInteriorSpace(focus)))).toLowerCase() +
        (preserveWhitespace ? postWhite : "")).replace(/__/g, "_");
}
