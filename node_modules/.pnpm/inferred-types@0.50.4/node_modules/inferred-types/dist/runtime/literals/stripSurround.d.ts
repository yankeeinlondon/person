import { StripSurround, TupleToUnion } from "src/types/index";
export type StripSurroundConfigured<TStrip extends readonly (string | number)[]> = <TInput extends string | number>(input: TInput) => StripSurround<TInput, TupleToUnion<TStrip>>;
/**
 * **stripSurround**`(chars) => (input) => _stripped_`
 *
 * A higher order function which allows you to define a string literal
 * stripping function for both the beginning and end of a string literal.
 *
 * ```ts
 * // utility which will strip all starting and ending brackets
 * const stripBrackets = stripSurround("(", ")", "[", "]", "{", "}");
 * // " hello, world "
 * const without = stripBrackets("[ hello, world ]")
 * ```
 *
 * **Related**: `stripSurroundAndTrim`
 */
export declare const stripSurround: <TChars extends readonly (number | string)[]>(...chars: TChars) => StripSurroundConfigured<TChars>;
//# sourceMappingURL=stripSurround.d.ts.map