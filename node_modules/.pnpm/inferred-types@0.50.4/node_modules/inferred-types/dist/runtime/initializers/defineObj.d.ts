import { EmptyObject, ExpandDictionary, IsNonEmptyObject, Narrowable, RemoveIndex, Widen } from "src/types/index";
/**
 * **defineObj**(literal) -> (wide) -> object
 *
 * A runtime utility designed to create an object _type_ from runtime objects.
 * The object's keys are all type literals, but the values can be either
 * _wide_ variants of the value passed in or instead maintain as _narrow_
 * a type definition as possible.
 *
 * ### Example
 * ```ts
 * // { foo: 1; bar: number; baz: number }
 * const fooBarBaz = defineObj({foo: 1})({bar: 2, baz: 3});
 * ```
 */
export declare function defineObj<N extends Narrowable, TLiteral extends Record<string, N>>(literal?: TLiteral): <N2 extends Narrowable, TWide extends Record<string, N2>>(wide?: TWide) => ExpandDictionary<RemoveIndex<TLiteral> & (IsNonEmptyObject<TWide> extends true ? Widen<TWide> : EmptyObject)>;
//# sourceMappingURL=defineObj.d.ts.map