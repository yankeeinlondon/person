import { Shape, ShapeApi as TShapeApi, ShapeCallback, HandleDoneFn } from "src/types/index";
export declare const ShapeApiImplementation: TShapeApi;
/**
 * **shape**(s => s.[API])
 *
 * Provides a callback API to allow for defining a type (_which
 * retains a runtime value which will map back to the type_)
 *
 * **Related:** `isShape(val)`
 */
export declare const shape: <T extends ShapeCallback>(cb: T) => HandleDoneFn<ReturnType<T>>;
/**
 * **isShape**(val)
 *
 * Type guard which tests whether a value is a _type_ defined by a `Shape`.
 */
export declare const isShape: (v: unknown) => v is Shape;
//# sourceMappingURL=shape.d.ts.map