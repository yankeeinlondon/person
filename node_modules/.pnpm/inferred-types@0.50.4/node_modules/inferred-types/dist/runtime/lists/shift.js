import { isDefined } from "src/runtime/index";
/**
 * **shift**(list)
 *
 * Takes a list of elements and:
 *
 * - if the list is empty returns _undefined_
 * - otherwise returns the first element in the list
 *
 * **Note:** unlike using the builtin `ARR.shift()` method:
 *
 * - the source array is _never_ mutated
 * - you can shift off the first element of the readonly array as well a mutable one
 * (because the underlying array is _not_ mutated)
 * - in **many** cases, you should be using a queue of some sort with utils like
 * `createLifoQueue()` or `createFifoQueue()`
 *
 */
export const shift = (list) => {
    let rtn;
    if (isDefined(list)) {
        rtn = (list.length === 0
            ? undefined
            : list[0]);
        try {
            // remove item from source array where possible
            // note: not possible when array is frozen by being
            // made readonly
            list = list.slice(1);
        }
        catch {
            // ignore
        }
    }
    else {
        rtn = undefined;
    }
    return rtn;
};
